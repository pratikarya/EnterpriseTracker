#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EnterpriseTracker.Api
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EnterpriseTracker")]
	public partial class EnterpriseTrackerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblCategory(tblCategory instance);
    partial void UpdatetblCategory(tblCategory instance);
    partial void DeletetblCategory(tblCategory instance);
    partial void InserttblUser(tblUser instance);
    partial void UpdatetblUser(tblUser instance);
    partial void DeletetblUser(tblUser instance);
    partial void InserttblOrder(tblOrder instance);
    partial void UpdatetblOrder(tblOrder instance);
    partial void DeletetblOrder(tblOrder instance);
    partial void InserttblProduct(tblProduct instance);
    partial void UpdatetblProduct(tblProduct instance);
    partial void DeletetblProduct(tblProduct instance);
    #endregion
		
		public EnterpriseTrackerDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["EnterpriseTrackerConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EnterpriseTrackerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EnterpriseTrackerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EnterpriseTrackerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EnterpriseTrackerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblCategory> tblCategories
		{
			get
			{
				return this.GetTable<tblCategory>();
			}
		}
		
		public System.Data.Linq.Table<tblUser> tblUsers
		{
			get
			{
				return this.GetTable<tblUser>();
			}
		}
		
		public System.Data.Linq.Table<tblOrder> tblOrders
		{
			get
			{
				return this.GetTable<tblOrder>();
			}
		}
		
		public System.Data.Linq.Table<tblProduct> tblProducts
		{
			get
			{
				return this.GetTable<tblProduct>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCategory")]
	public partial class tblCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _Description;
		
		private int _Status;
		
		private EntitySet<tblProduct> _tblProducts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public tblCategory()
		{
			this._tblProducts = new EntitySet<tblProduct>(new Action<tblProduct>(this.attach_tblProducts), new Action<tblProduct>(this.detach_tblProducts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategory_tblProduct", Storage="_tblProducts", ThisKey="Id", OtherKey="CategoryId")]
		public EntitySet<tblProduct> tblProducts
		{
			get
			{
				return this._tblProducts;
			}
			set
			{
				this._tblProducts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCategory = this;
		}
		
		private void detach_tblProducts(tblProduct entity)
		{
			this.SendPropertyChanging();
			entity.tblCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblUser")]
	public partial class tblUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Email;
		
		private string _PasswordHash;
		
		private int _Type;
		
		private int _Status;
		
		private EntitySet<tblOrder> _tblOrders;
		
		private EntitySet<tblOrder> _tblOrders1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public tblUser()
		{
			this._tblOrders = new EntitySet<tblOrder>(new Action<tblOrder>(this.attach_tblOrders), new Action<tblOrder>(this.detach_tblOrders));
			this._tblOrders1 = new EntitySet<tblOrder>(new Action<tblOrder>(this.attach_tblOrders1), new Action<tblOrder>(this.detach_tblOrders1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(100)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblOrder", Storage="_tblOrders", ThisKey="Id", OtherKey="OwnerId")]
		public EntitySet<tblOrder> tblOrders
		{
			get
			{
				return this._tblOrders;
			}
			set
			{
				this._tblOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblOrder1", Storage="_tblOrders1", ThisKey="Id", OtherKey="CustomerId")]
		public EntitySet<tblOrder> tblOrders1
		{
			get
			{
				return this._tblOrders1;
			}
			set
			{
				this._tblOrders1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = this;
		}
		
		private void detach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblUser = null;
		}
		
		private void attach_tblOrders1(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblUser1 = this;
		}
		
		private void detach_tblOrders1(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblUser1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrder")]
	public partial class tblOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _OwnerId;
		
		private System.Nullable<System.Guid> _CustomerId;
		
		private System.Guid _ProductId;
		
		private double _Unit;
		
		private System.Nullable<System.DateTime> _Time;
		
		private string _Message;
		
		private string _Details;
		
		private System.Nullable<double> _PrintCharge;
		
		private System.Nullable<double> _ExtraCharge;
		
		private System.Nullable<double> _DesignCharge;
		
		private System.Nullable<double> _DeliveryCharge;
		
		private System.Nullable<bool> _CarryBag;
		
		private System.Nullable<bool> _Extra;
		
		private System.Nullable<decimal> _ContactNumber;
		
		private System.DateTime _CreatedDate;
		
		private System.DateTime _ModifiedDate;
		
		private int _Status;
		
		private EntityRef<tblOrder> _tblOrder2;
		
		private EntityRef<tblOrder> _tblOrder1;
		
		private EntityRef<tblUser> _tblUser;
		
		private EntityRef<tblUser> _tblUser1;
		
		private EntityRef<tblProduct> _tblProduct;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnOwnerIdChanging(System.Guid value);
    partial void OnOwnerIdChanged();
    partial void OnCustomerIdChanging(System.Nullable<System.Guid> value);
    partial void OnCustomerIdChanged();
    partial void OnProductIdChanging(System.Guid value);
    partial void OnProductIdChanged();
    partial void OnUnitChanging(double value);
    partial void OnUnitChanged();
    partial void OnTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    partial void OnPrintChargeChanging(System.Nullable<double> value);
    partial void OnPrintChargeChanged();
    partial void OnExtraChargeChanging(System.Nullable<double> value);
    partial void OnExtraChargeChanged();
    partial void OnDesignChargeChanging(System.Nullable<double> value);
    partial void OnDesignChargeChanged();
    partial void OnDeliveryChargeChanging(System.Nullable<double> value);
    partial void OnDeliveryChargeChanged();
    partial void OnCarryBagChanging(System.Nullable<bool> value);
    partial void OnCarryBagChanged();
    partial void OnExtraChanging(System.Nullable<bool> value);
    partial void OnExtraChanged();
    partial void OnContactNumberChanging(System.Nullable<decimal> value);
    partial void OnContactNumberChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnModifiedDateChanging(System.DateTime value);
    partial void OnModifiedDateChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public tblOrder()
		{
			this._tblOrder2 = default(EntityRef<tblOrder>);
			this._tblOrder1 = default(EntityRef<tblOrder>);
			this._tblUser = default(EntityRef<tblUser>);
			this._tblUser1 = default(EntityRef<tblUser>);
			this._tblProduct = default(EntityRef<tblProduct>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					if (this._tblOrder1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid OwnerId
		{
			get
			{
				return this._OwnerId;
			}
			set
			{
				if ((this._OwnerId != value))
				{
					if (this._tblUser.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnOwnerIdChanging(value);
					this.SendPropertyChanging();
					this._OwnerId = value;
					this.SendPropertyChanged("OwnerId");
					this.OnOwnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> CustomerId
		{
			get
			{
				return this._CustomerId;
			}
			set
			{
				if ((this._CustomerId != value))
				{
					if (this._tblUser1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomerIdChanging(value);
					this.SendPropertyChanging();
					this._CustomerId = value;
					this.SendPropertyChanged("CustomerId");
					this.OnCustomerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProductId
		{
			get
			{
				return this._ProductId;
			}
			set
			{
				if ((this._ProductId != value))
				{
					if (this._tblProduct.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProductIdChanging(value);
					this.SendPropertyChanging();
					this._ProductId = value;
					this.SendPropertyChanged("ProductId");
					this.OnProductIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="Float NOT NULL")]
		public double Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="VarChar(1000)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="VarChar(MAX)")]
		public string Details
		{
			get
			{
				return this._Details;
			}
			set
			{
				if ((this._Details != value))
				{
					this.OnDetailsChanging(value);
					this.SendPropertyChanging();
					this._Details = value;
					this.SendPropertyChanged("Details");
					this.OnDetailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrintCharge", DbType="Float")]
		public System.Nullable<double> PrintCharge
		{
			get
			{
				return this._PrintCharge;
			}
			set
			{
				if ((this._PrintCharge != value))
				{
					this.OnPrintChargeChanging(value);
					this.SendPropertyChanging();
					this._PrintCharge = value;
					this.SendPropertyChanged("PrintCharge");
					this.OnPrintChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraCharge", DbType="Float")]
		public System.Nullable<double> ExtraCharge
		{
			get
			{
				return this._ExtraCharge;
			}
			set
			{
				if ((this._ExtraCharge != value))
				{
					this.OnExtraChargeChanging(value);
					this.SendPropertyChanging();
					this._ExtraCharge = value;
					this.SendPropertyChanged("ExtraCharge");
					this.OnExtraChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignCharge", DbType="Float")]
		public System.Nullable<double> DesignCharge
		{
			get
			{
				return this._DesignCharge;
			}
			set
			{
				if ((this._DesignCharge != value))
				{
					this.OnDesignChargeChanging(value);
					this.SendPropertyChanging();
					this._DesignCharge = value;
					this.SendPropertyChanged("DesignCharge");
					this.OnDesignChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeliveryCharge", DbType="Float")]
		public System.Nullable<double> DeliveryCharge
		{
			get
			{
				return this._DeliveryCharge;
			}
			set
			{
				if ((this._DeliveryCharge != value))
				{
					this.OnDeliveryChargeChanging(value);
					this.SendPropertyChanging();
					this._DeliveryCharge = value;
					this.SendPropertyChanged("DeliveryCharge");
					this.OnDeliveryChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CarryBag", DbType="Bit")]
		public System.Nullable<bool> CarryBag
		{
			get
			{
				return this._CarryBag;
			}
			set
			{
				if ((this._CarryBag != value))
				{
					this.OnCarryBagChanging(value);
					this.SendPropertyChanging();
					this._CarryBag = value;
					this.SendPropertyChanged("CarryBag");
					this.OnCarryBagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Extra", DbType="Bit")]
		public System.Nullable<bool> Extra
		{
			get
			{
				return this._Extra;
			}
			set
			{
				if ((this._Extra != value))
				{
					this.OnExtraChanging(value);
					this.SendPropertyChanging();
					this._Extra = value;
					this.SendPropertyChanged("Extra");
					this.OnExtraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContactNumber", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> ContactNumber
		{
			get
			{
				return this._ContactNumber;
			}
			set
			{
				if ((this._ContactNumber != value))
				{
					this.OnContactNumberChanging(value);
					this.SendPropertyChanging();
					this._ContactNumber = value;
					this.SendPropertyChanged("ContactNumber");
					this.OnContactNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifiedDate", DbType="DateTime NOT NULL")]
		public System.DateTime ModifiedDate
		{
			get
			{
				return this._ModifiedDate;
			}
			set
			{
				if ((this._ModifiedDate != value))
				{
					this.OnModifiedDateChanging(value);
					this.SendPropertyChanging();
					this._ModifiedDate = value;
					this.SendPropertyChanged("ModifiedDate");
					this.OnModifiedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrder_tblOrder", Storage="_tblOrder2", ThisKey="Id", OtherKey="Id", IsUnique=true, IsForeignKey=false)]
		public tblOrder tblOrder2
		{
			get
			{
				return this._tblOrder2.Entity;
			}
			set
			{
				tblOrder previousValue = this._tblOrder2.Entity;
				if (((previousValue != value) 
							|| (this._tblOrder2.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblOrder2.Entity = null;
						previousValue.tblOrder1 = null;
					}
					this._tblOrder2.Entity = value;
					if ((value != null))
					{
						value.tblOrder1 = this;
					}
					this.SendPropertyChanged("tblOrder2");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblOrder_tblOrder", Storage="_tblOrder1", ThisKey="Id", OtherKey="Id", IsForeignKey=true)]
		public tblOrder tblOrder1
		{
			get
			{
				return this._tblOrder1.Entity;
			}
			set
			{
				tblOrder previousValue = this._tblOrder1.Entity;
				if (((previousValue != value) 
							|| (this._tblOrder1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblOrder1.Entity = null;
						previousValue.tblOrder2 = null;
					}
					this._tblOrder1.Entity = value;
					if ((value != null))
					{
						value.tblOrder2 = this;
						this._Id = value.Id;
					}
					else
					{
						this._Id = default(System.Guid);
					}
					this.SendPropertyChanged("tblOrder1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblOrder", Storage="_tblUser", ThisKey="OwnerId", OtherKey="Id", IsForeignKey=true)]
		public tblUser tblUser
		{
			get
			{
				return this._tblUser.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser.Entity;
				if (((previousValue != value) 
							|| (this._tblUser.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser.Entity = null;
						previousValue.tblOrders.Remove(this);
					}
					this._tblUser.Entity = value;
					if ((value != null))
					{
						value.tblOrders.Add(this);
						this._OwnerId = value.Id;
					}
					else
					{
						this._OwnerId = default(System.Guid);
					}
					this.SendPropertyChanged("tblUser");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblUser_tblOrder1", Storage="_tblUser1", ThisKey="CustomerId", OtherKey="Id", IsForeignKey=true)]
		public tblUser tblUser1
		{
			get
			{
				return this._tblUser1.Entity;
			}
			set
			{
				tblUser previousValue = this._tblUser1.Entity;
				if (((previousValue != value) 
							|| (this._tblUser1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblUser1.Entity = null;
						previousValue.tblOrders1.Remove(this);
					}
					this._tblUser1.Entity = value;
					if ((value != null))
					{
						value.tblOrders1.Add(this);
						this._CustomerId = value.Id;
					}
					else
					{
						this._CustomerId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("tblUser1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblOrder", Storage="_tblProduct", ThisKey="ProductId", OtherKey="Id", IsForeignKey=true)]
		public tblProduct tblProduct
		{
			get
			{
				return this._tblProduct.Entity;
			}
			set
			{
				tblProduct previousValue = this._tblProduct.Entity;
				if (((previousValue != value) 
							|| (this._tblProduct.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblProduct.Entity = null;
						previousValue.tblOrders.Remove(this);
					}
					this._tblProduct.Entity = value;
					if ((value != null))
					{
						value.tblOrders.Add(this);
						this._ProductId = value.Id;
					}
					else
					{
						this._ProductId = default(System.Guid);
					}
					this.SendPropertyChanged("tblProduct");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblProduct")]
	public partial class tblProduct : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private System.Guid _CategoryId;
		
		private string _Unit;
		
		private double _Price;
		
		private bool _IsVeg;
		
		private int _Status;
		
		private EntitySet<tblOrder> _tblOrders;
		
		private EntityRef<tblCategory> _tblCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCategoryIdChanging(System.Guid value);
    partial void OnCategoryIdChanged();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    partial void OnPriceChanging(double value);
    partial void OnPriceChanged();
    partial void OnIsVegChanging(bool value);
    partial void OnIsVegChanged();
    partial void OnStatusChanging(int value);
    partial void OnStatusChanged();
    #endregion
		
		public tblProduct()
		{
			this._tblOrders = new EntitySet<tblOrder>(new Action<tblOrder>(this.attach_tblOrders), new Action<tblOrder>(this.detach_tblOrders));
			this._tblCategory = default(EntityRef<tblCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid CategoryId
		{
			get
			{
				return this._CategoryId;
			}
			set
			{
				if ((this._CategoryId != value))
				{
					if (this._tblCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._CategoryId = value;
					this.SendPropertyChanged("CategoryId");
					this.OnCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Float NOT NULL")]
		public double Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsVeg", DbType="Bit NOT NULL")]
		public bool IsVeg
		{
			get
			{
				return this._IsVeg;
			}
			set
			{
				if ((this._IsVeg != value))
				{
					this.OnIsVegChanging(value);
					this.SendPropertyChanging();
					this._IsVeg = value;
					this.SendPropertyChanged("IsVeg");
					this.OnIsVegChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int NOT NULL")]
		public int Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblProduct_tblOrder", Storage="_tblOrders", ThisKey="Id", OtherKey="ProductId")]
		public EntitySet<tblOrder> tblOrders
		{
			get
			{
				return this._tblOrders;
			}
			set
			{
				this._tblOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblCategory_tblProduct", Storage="_tblCategory", ThisKey="CategoryId", OtherKey="Id", IsForeignKey=true)]
		public tblCategory tblCategory
		{
			get
			{
				return this._tblCategory.Entity;
			}
			set
			{
				tblCategory previousValue = this._tblCategory.Entity;
				if (((previousValue != value) 
							|| (this._tblCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tblCategory.Entity = null;
						previousValue.tblProducts.Remove(this);
					}
					this._tblCategory.Entity = value;
					if ((value != null))
					{
						value.tblProducts.Add(this);
						this._CategoryId = value.Id;
					}
					else
					{
						this._CategoryId = default(System.Guid);
					}
					this.SendPropertyChanged("tblCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = this;
		}
		
		private void detach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.tblProduct = null;
		}
	}
}
#pragma warning restore 1591
